<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="RimDialogue.Core" #>

Here are some background facts about <#= this.Initiator.NickName #> and <#= this.Recipient.NickName #>. 
Use this information to help you write the conversation from their perspectives.  
If it is relevant, work one of these facts into the conversation.

<# if (this.Config.ShowSpecialInstructions) { #>
<#  if (!string.IsNullOrWhiteSpace(this.Initiator.Instructions)) { #>
Instructions for <#= this.Initiator.NickName #>: <#= this.Initiator.Instructions #>
<#  } #>
<#  if (!string.IsNullOrWhiteSpace(this.Recipient.Instructions)) { #>
Instructions for <#= this.Recipient.NickName #>: <#= this.Recipient.Instructions #>
<#  } #>
<# } #>

<# if (this.Config.ShowOpinions) { #>
<#= this.Initiator.NickName #> <#= TemplateHelper.DescribeOpinion(this.InitiatorOpinionOfRecipient) #> <#= this.Recipient.NickName #>.
<#= this.Recipient.NickName #> <#= TemplateHelper.DescribeOpinion(this.RecipientOpinionOfInitiator) #> <#= this.Initiator.NickName #>.
Use <#= this.Initiator.NickName #>'s and <#= this.Recipient.NickName #>'s opinion of each other to affect the tone of the conversation.
<# } #>
<# if (this.Config.ShowAnimal && this.Initiator.IsAnimal) { #>
<#= this.Initiator.NickName #> can't speak, but they can communicate through actions, sounds, and body language.
<# } #>
<# if (this.Config.ShowAnimal && this.Recipient.IsAnimal) { #>
<#= this.Recipient.NickName #> can't speak, but they can communicate through actions, sounds, and body language.
<# } #>
<# if (this.Config.ShowPersonality) { #>
Use <#= this.Initiator.NickName #>'s and <#= this.Recipient.NickName #>'s personality to affect how they react to the interaction.
<# if (!string.IsNullOrWhiteSpace(this.Initiator.Personality)) { #>
<#= this.Initiator.NickName #>'s personality is <#= this.Initiator.Personality #>
<#= this.Initiator.PersonalityDescription #>
<# } #>
<# } #>
<# if (!string.IsNullOrWhiteSpace(this.Recipient.Personality)) { #>
<#= this.Recipient.NickName #>'s personality is <#= this.Recipient.Personality #>
<#= this.Recipient.PersonalityDescription #>
<# } #>
Mood is how <#= this.Initiator.NickName #> and <#= this.Recipient.NickName #> are feeling and how positive or nagative they will be.
<# if (this.Config.ShowMoodString && !string.IsNullOrWhiteSpace(this.Initiator.MoodString)) { #>
<#= this.Initiator.NickName #>'s overall mood is <#= this.Initiator.MoodString #>.
<# } #>
<# if (this.Config.ShowMoodString && !string.IsNullOrWhiteSpace(this.Recipient.MoodString)) { #>
<#= this.Recipient.NickName #>'s overall mood is <#= this.Recipient.MoodString #>.
<# } #>
<# if (this.Config.ShowFullName) {#>
<#   if (!string.IsNullOrWhiteSpace(this.Initiator.FullName)) { #>
<#= this.Initiator.NickName #>'s full name is <#= this.Initiator.FullName #>.
<#   } #>
<#   if (!string.IsNullOrWhiteSpace(this.Recipient.FullName)) { #>
<#= this.Recipient.NickName #>'s full name is <#= this.Recipient.FullName #>.
<#   } #>
<# } #>
<# if (this.Config.ShowAgeRaceAndGender) {#>
Use age, race, and gender help to understand their perspective. 
<#= this.Initiator.NickName #>'s is a <#= this.Initiator.Gender #> <#= this.Initiator.Race #> age <#= this.Initiator.Age #> years old.
<#   if (!string.IsNullOrWhiteSpace(this.Recipient.NickName)) { #>
<#= this.Recipient.NickName #>'s is a <#= this.Recipient.Gender #> <#= this.Recipient.Race #> age <#= this.Recipient.Age #> years old.
<#   } #>
<# } #>
<# if (this.Config.ShowDescription) {#>
<#   if (this.Initiator.Description == this.Recipient.Description) { #>
Both <#= this.Initiator.NickName #> and <#= this.Recipient.NickName #> are <#= this.Initiator.Description #>.
<#   } else { #>
<#= this.Initiator.NickName #>'s is <#= this.Initiator.Description #>
<#     if (!string.IsNullOrWhiteSpace(this.Recipient.NickName)) { #>
<#= this.Recipient.NickName #>'s is <#= this.Recipient.Description #>
<#     } #>
<#   } #>
<# } #>
<# if (this.Config.ShowPawnType) { #>
<#   if (this.Initiator.IsColonist && this.Recipient.IsColonist) { #>
Both <#= this.Initiator.NickName #> and <#= this.Recipient.NickName #> are colonists and members of the player's colony.
<#   } else if (this.Initiator.IsPrisoner && this.Recipient.IsPrisoner) { #>
Both <#= this.Initiator.NickName #> and <#= this.Recipient.NickName #> are prisoners. In RimWorld, prisoners are both assets and risks. Colonists house them in prison cells, meeting needs like food, care, and recreation to prevent escapes. Prisoners can be recruited, traded, or exploited for labor or medical resources.
<#   } else if (this.Initiator.IsHostile && this.Recipient.IsHostile) { #>
Both <#= this.Initiator.NickName #> and <#= this.Recipient.NickName #> are raiders and are here to attack the player's colony.
<#   } else { #>
<#     if (this.Initiator.IsColonist) { #>
<#= this.Initiator.NickName #> is a colonist and a member of the player's colony.  
<#     } else if (this.Initiator.IsPrisoner) { #>
<#= this.Initiator.NickName #> is a prisoner.  In RimWorld, prisoners are both assets and risks. Colonists house them in prison cells, meeting needs like food, care, and recreation to prevent escapes. Prisoners can be recruited, traded, or exploited for labor or medical resources.
<#     } else if (this.Initiator.IsHostile) { #>
<#= this.Initiator.NickName #> is a raider and is here to attack the player's colony.
<#     } else if (!this.Initiator.IsAnimal) { #>
<#= this.Initiator.NickName #> is an NPC and just a temporary visitor here.  They are probably here as part of a trade caravan.
<#     } #>
<#     if (this.Recipient.IsColonist) { #>
<#= this.Recipient.NickName #> is a colonist and a member of the player's colony.  
<#     } else if (this.Recipient.IsPrisoner) { #>
<#= this.Recipient.NickName #> is a prisoner. In RimWorld, prisoners are both assets and risks. Colonists house them in prison cells, meeting needs like food, care, and recreation to prevent escapes. Prisoners can be recruited, traded, or exploited for labor or medical resources.
<#     } else if (this.Recipient.IsHostile) { #>
<#= this.Recipient.NickName #> is a raider and is here to attack the player's colony.
<#     } else if (!string.IsNullOrWhiteSpace(this.Recipient.NickName) && !this.Recipient.IsAnimal) { #>
<#= this.Recipient.NickName #> is an NPC and just a temporary visitor here.
<#     } #>
<#   } #>
<# } #>
<# if (this.Config.ShowAdulthood && !string.IsNullOrWhiteSpace(this.Initiator.Adulthood)) { #>
<#= this.Initiator.NickName #>'s adulthood was spent as: <#= this.Initiator.Adulthood #>
<# } #>
<# if (this.Config.ShowAdulthood && !string.IsNullOrWhiteSpace(this.Recipient.Adulthood)) { #>
<#= this.Recipient.NickName #>'s adulthood was spent as: <#= this.Recipient.Adulthood #>
<# } #>
<# if (this.Config.ShowChildhood && !string.IsNullOrWhiteSpace(this.Initiator.Childhood)) { #>
<#= this.Initiator.NickName #>'s childhood was spent as: <#= this.Initiator.Childhood #>
<# } #>
<# if (this.Config.ShowChildhood && !string.IsNullOrWhiteSpace(this.Recipient.Childhood)) { #>
<#= this.Recipient.NickName #>'s childhood was spent as: <#= this.Recipient.Childhood #>
<# } #>
<# if (this.Config.ShowRoyaltyTitle && !string.IsNullOrWhiteSpace(this.Initiator.RoyaltyTitle)) { #>
<#= this.Initiator.NickName #> is royalty. Pawns speak differently to royalty, often with more respect and formality.
<#= this.Initiator.NickName #>'s royal title is <#= this.Initiator.RoyaltyTitle #>
<# } #>
<# if (this.Config.ShowRoyaltyTitle && !string.IsNullOrWhiteSpace(this.Recipient.RoyaltyTitle)) { #>
<#= this.Recipient.RoyaltyTitle #> is royalty. Pawns speak differently to royalty, often with more respect and formality.
<#= this.Recipient.NickName #>'s royal title is <#= this.Recipient.RoyaltyTitle #>
<# } #>
<# if (this.Config.ShowFaction) { #>
<#   if (this.Initiator.FactionName == this.Recipient.FactionName) { #>
Both <#= this.Initiator.NickName #> and <#= this.Recipient.NickName #> belong to the same faction, called "<#= this.Initiator.FactionName #>". It is a <#= this.Initiator.FactionLabel #> faction. <#= this.Initiator.FactionDescription #>
<#   } else { #>
<#     if (!string.IsNullOrWhiteSpace(this.Initiator.FactionName)) { #> 
The faction <#= this.Initiator.NickName #> belongs to is called "<#= this.Initiator.FactionName #>". It is a <#= this.Initiator.FactionLabel #> faction. <#= this.Initiator.FactionDescription #>
<#     } #>
<#     if (!string.IsNullOrWhiteSpace(this.Recipient.FactionName)) { #> 
The faction <#= this.Recipient.NickName #> belongs to is called "<#= this.Recipient.FactionName #>". It is a <#= this.Recipient.FactionLabel #> faction. <#= this.Recipient.FactionDescription #>
<#     } #>
<#   } #>
<# } #>
<#   if (!string.IsNullOrWhiteSpace(this.Initiator.JobReport)) { #>
<#= this.Initiator.NickName #>'s current activity is <#= this.Initiator.JobReport #>
<#     if (!string.IsNullOrWhiteSpace(this.Initiator.Carrying)) { #>
<#= this.Initiator.NickName #> is carrying <#= this.Initiator.Carrying #>.
<#     } #>
<#   } #>
<#   if (!string.IsNullOrWhiteSpace(this.Recipient.JobReport)) { #>
<#= this.Recipient.NickName #>'s current activity is <#= this.Recipient.JobReport #>
<#     if (!string.IsNullOrWhiteSpace(this.Recipient.Carrying)) { #>
<#= this.Recipient.NickName #> is carrying <#= this.Recipient.Carrying #>.
<#     } #>
<#   } #>